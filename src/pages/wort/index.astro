---
import "@styles/objects/_word-index.scss";
import "@styles/components/_word-group.scss";
import "@styles/plugins/astro-breadcrumbs.scss";
import Layout from "@layouts/Layout.astro";
import { fetchAllWordsLinks } from "@services/api.ts";
import { routeToWord, seoData } from "@utils/helpers.ts";
import { Breadcrumbs } from "astro-breadcrumbs";
import ChevronRight from "~icons/lucide/chevron-right";

import type { RootQueryToBerlinerWordConnectionEdge } from "@/gql/graphql";

async function getGroupedWords(): Promise<Record<string, RootQueryToBerlinerWordConnectionEdge[]>> {
  const allWords = await fetchAllWordsLinks();

  const groupedWords: Record<string, RootQueryToBerlinerWordConnectionEdge[]> = {};

  allWords.forEach(({ node }) => {
    const group = node.wordGroup;
    if (!group) return;

    if (!groupedWords[group]) {
      groupedWords[group] = [];
    }
    groupedWords[group].push(node);
  });

  return groupedWords;
}

const groupedWords = await getGroupedWords();
const sortedGroups = Object.keys(groupedWords).sort();

const content = {
  seo: {
    opengraphDescription:
      "Alle Berliner Worte in der Übersicht. Lerne mehr über: die Berliner Mundart, Berlinisch, den Berliner Jargon, Berlinerisch & Berolinismus.",
  },
  title: "Berlinerisch Wort-Index - Berlinerisch zu Hochdeutsch",
};

const schemaJson = () =>
  JSON.stringify({
    "@context": "https://schema.org",
    "@type": "DefinedTermSet",
    description: "Berliner Dialekt Wörterbuch - Berlinerisch zu Hochdeutsch.",
    name: "Berliner Schnauze Wörterbuch",
    url: "https://berliner-schnauze.de/wort",
  });
---

<Layout content={seoData(content)} contentClasses="o-word-index">
  <Fragment slot="head">
    <script set:html={schemaJson()} type="application/ld+json" />
  </Fragment>
  <Breadcrumbs indexText="Start">
    <ChevronRight height="20" slot="separator" width="20" />
  </Breadcrumbs>

  <h1>Wort-Index</h1>
  {
    sortedGroups.map((group) => (
      <section class="c-word-group">
        <h2 class="c-word-group__group" title={group}>
          {group}
        </h2>
        <ul class="c-word-group__list">
          {groupedWords[group].map((word) => (
            <li>
              <a
                class="c-word-group__link"
                href={routeToWord(word.slug)}
                title={`Zur ${word.wordProperties?.berlinerisch} Seite`}
              >
                {word.wordProperties?.berlinerisch}
              </a>
            </li>
          ))}
        </ul>
      </section>
    ))
  }
</Layout>
