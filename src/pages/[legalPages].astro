---
import "@styles/objects/_legal-pages.scss";
import Layout from "@layouts/Layout.astro";
import type { InferGetStaticParamsType, InferGetStaticPropsType, GetStaticPaths } from "astro";
import { GetPagesBySlugsDocument } from "@/gql/graphql.ts";
import { WP_API } from "astro:env/client";
import { Client, cacheExchange, fetchExchange } from "@urql/core";

export const getStaticPaths = (async () => {
  const client = new Client({
    url: WP_API,
    fetchOptions: {
      headers: {
        "Content-Type": "application/json",
      },
    },
    exchanges: [cacheExchange, fetchExchange],
  });

  const pagesResponse = await client
    .query(GetPagesBySlugsDocument, {
      slugs: ["datenschutz", "impressum"],
    })
    .toPromise();

  const pages = pagesResponse?.data?.pages?.nodes;

  if (!pages) {
    return [];
  }

  return pages.map((page) => {
    let betterSlug;
    if (page.slug === "datenschutz") {
      betterSlug = "datenschutz";
    } else if (page.slug === "impressum") {
      betterSlug = "impressum";
    }

    return {
      params: {
        legalPages: betterSlug,
      },
      props: {
        page,
      },
    };
  });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { legalPages } = Astro.params as Params;
const { page } = Astro.props;
---

<Layout content={page}>
  <article set:html={page.content} />
</Layout>
