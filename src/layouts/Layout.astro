---
import "@styles/app.scss";
import { Head } from "astro-capo";
import BaseHead from "@components/BaseHead.astro";
import ScrollToTop from "@components/ScrollToTop.vue";
import Footer from "@components/Footer.astro";
import MainHeader from "@components/header/MainHeader.astro";
import ToastNotifyContainer from "@components/toast/ToastNotifyContainer.vue";
import Modal from "@components/Modal.vue";
import { fetchAllWords } from "@services/api.ts";
import SetWordData from "@components/word-search/SetWordData.vue";

import type { SeoProps } from "@components/BaseHead.astro";

export interface DefaultLayoutProps {
  content: {
    title: string;
    seo?: SeoProps;
  };
  contentClasses?: Array<string> | string;
  bodyClasses?: Array<string> | string;
}

const {
  content: { title, seo },
  contentClasses,
  bodyClasses,
} = Astro.props as DefaultLayoutProps;

const allWords = await fetchAllWords();
const availableWordGroups = Array.from(new Set(allWords.map(({ node }) => node.wordGroup))).sort();

const wordTypes = Array.from(
  new Set(
    allWords
      .map(({ node }) => node.berlinerischWordTypes?.nodes)
      .flat()
      .map((node) => node?.name)
  )
).sort();
---

<!doctype html>
<html lang="de">
  <Head>
    <BaseHead title={title} seo={seo} />

    <slot name="head" />
  </Head>
  <body class="o-body" class:list={bodyClasses}>
    <MainHeader transition:persist />
    <main class="o-content u-max-body-width" class:list={contentClasses}>
      <div id="docStart" style="position: absolute"></div>
      <slot />
    </main>
    <ScrollToTop client:load />
    <ToastNotifyContainer client:only="vue" />
    <Modal client:only="vue" />
    <SetWordData
      availableLetterGroups={availableWordGroups}
      wordTypes={wordTypes}
      client:only="vue"
    />
    <Footer transition:persist />
  </body>
</html>
